

kubectl apply -f service_nginx.yaml
kubectl get ep myservice
kubectl port-forward service/myservice 8080:80
kubectl port-forward --address 0.0.0.0 service/myservice 82:80
curl http://192.168.29.16:8080



apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app: myapp
    type: front-end
spec:
  containers:
  - name: nginx-container
    image: nginx
    ports:
    - containerPort: 80

kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: myservice
spec:
  ports:
    # Accept traffic sent to port 80
    - name: http
      port: 82
      targetPort: 80
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: myapp
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
    type: front-end

 kubectl port-forward --address 0.0.0.0 service/myservice 8080:82  
or 
 kubectl port-forward --address 0.0.0.0 service/myservice 8082:82 &
82 is node port and 8080 or 8082 is webport

---
apiVersion: v1
kind: Pod
metadata:
  name: nginx
  labels:
    app: myapp
    type: front-end
spec:
  containers:
  - name: nginx-container
    image: nginx
    ports:
    - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  # Unique key of the Service instance
  name: myservice
spec:
  ports:
    # Accept traffic sent to port 80
    - name: http
      port: 80
      targetPort: 80
  selector:
    # Loadbalance traffic across Pods matching
    # this label selector
    app: myapp
  # Create an HA proxy in the cloud provider
  # with an External IP address - *Only supported
  # by some cloud providers*
    type: front-end

 kubectl port-forward --address 0.0.0.0 service/myservice 8080:80  
or 
 kubectl port-forward --address 0.0.0.0 service/myservice 8081:80 &
80 is node port and 8082 or 8081 is webport

